#!/bin/sh

export PYTHON="python3"
export VENV="_python"
export PATH="$PWD/$VENV/bin:$PATH"
export PREFIX="./_site"
export PAGES_ORIGIN="origin/gh-pages"
export PAGES_LOCAL="gh-pages"

venv_setup() { # filename [force | silent]
    MD5_FILE="$VENV/$1.md5"

    if [ "_$2" = '_force' ] && [ -e "$MD5_FILE" ]; then
        rm "$MD5_FILE"
    fi

    if [ -e "$MD5_FILE" ] && md5sum -c "$MD5_FILE" > /dev/null 2>&1; then
        [ "_$2" != "_silent" ] && echo "Skipping virtual environment update (no changes in $1)"
        return 0
    fi

    if [ ! -d "$VENV" ]; then
        $PYTHON -m venv "$VENV" || exit 1
    fi

    $PYTHON -m pip install -U -r "$1" || exit 1

    md5sum "$1" > "$MD5_FILE"
}

if [ ! -d "$VENV" ] && [ "_$1" != "_venv" ]; then
    echo "Setting up the virtual environment: $VENV"
    venv_setup requirements.txt
fi

case $1 in
    venv)
        case $2 in
            update)
                venv_setup requirements.txt $3
                if [ -e "$VENV/cli-requirements.txt.md5" ]; then
                    venv_setup cli-requirements.txt $3
                fi ;;
            remove) rm -r "$VENV" ;;
            *) echo "Usage: $0 $1 update|remove" ;;
        esac ;;
    pages)
        case $2 in
            checkout)
                if [ "_$3" = '_force' ] || [ ! -e "$PREFIX" ]; then
                    rm -rf "$PREFIX"
                    git worktree prune
                    git worktree add "$PREFIX" "$PAGES_ORIGIN"
                else
                    (
                        cd "$PREFIX"
                        git clean -d -f
                        git reset --hard "$PAGES_ORIGIN"
                    )
                fi ;;
            diff)
                (
                    cd "$PREFIX"
                    git diff
                ) ;;
            commit)
                (
                    cd "$PREFIX"
                    git branch -D "$PAGES_LOCAL" || true
                    git checkout -b "$PAGES_LOCAL"
                    git branch --set-upstream-to="$PAGES_ORIGIN" "$PAGES_LOCAL"
                    git add .
                    git commit -m "Jenkins: Обновление статичных файлов" || true
                ) ;;
            push)
                (
                    cd "$PREFIX"
                    git push origin "$PAGES_LOCAL"
                ) ;;
            *) echo "Usage: $0 $1 checkout|diff|commit|push" ;;
        esac ;;
    pull) git pull --rebase && ./bsu pages checkout ;;
    build) $PYTHON -m templates.utils.generate ;;
    serve) $PYTHON -m templates.utils.serve ;;
    download-chats) $PYTHON -m templates.utils.chats ;;
    sh) $@ ;;
    cli)
        shift
        venv_setup cli-requirements.txt silent
        $PYTHON -m templates.utils.cli $@ ;;
    repl) $PYTHON -i -m templates.utils.repl ;;
    script) shift; $PYTHON -m templates.scripts.$@ ;;
    python) shift; $PYTHON $@ ;;
    *) echo "Usage: $0 venv|pages|build|serve|download-chats|sh|repl|script|python" ;;
esac
